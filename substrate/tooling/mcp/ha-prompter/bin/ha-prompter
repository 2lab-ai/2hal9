#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');
const os = require('os');

// Determine the binary name based on platform
function getBinaryName() {
  const platform = os.platform();
  const arch = os.arch();
  
  if (platform === 'darwin' && arch === 'arm64') {
    return 'ha-prompter-darwin-arm64';
  } else if (platform === 'darwin' && arch === 'x64') {
    return 'ha-prompter-darwin-x64';
  } else if (platform === 'linux' && arch === 'x64') {
    return 'ha-prompter-linux-x64';
  } else if (platform === 'win32' && arch === 'x64') {
    return 'ha-prompter-win-x64.exe';
  } else {
    throw new Error(`Unsupported platform: ${platform} ${arch}`);
  }
}

try {
  const binaryName = getBinaryName();
  const binaryPath = path.join(__dirname, binaryName);
  
  const child = spawn(binaryPath, process.argv.slice(2), {
    stdio: 'inherit',
    shell: false
  });
  
  child.on('error', (err) => {
    console.error('Failed to start ha-prompter:', err);
    process.exit(1);
  });
  
  child.on('exit', (code) => {
    process.exit(code || 0);
  });
} catch (err) {
  console.error(err.message);
  process.exit(1);
}