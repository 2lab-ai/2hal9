---
apiVersion: v1
kind: Secret
metadata:
  name: hal9-server-secrets
  namespace: hal9-production
  labels:
    app.kubernetes.io/name: hal9
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: production
type: Opaque
stringData:
  # Database credentials
  DATABASE_URL: "postgresql://hal9:CHANGE_ME@postgresql.hal9-production.svc.cluster.local:5432/hal9_production?sslmode=require"
  
  # Redis credentials
  REDIS_URL: "redis://:CHANGE_ME@redis.hal9-production.svc.cluster.local:6379/0"
  
  # Claude API
  ANTHROPIC_API_KEY: "sk-ant-CHANGE_ME"
  
  # JWT secrets
  JWT_SECRET: "CHANGE_ME_TO_RANDOM_64_CHAR_STRING"
  JWT_REFRESH_SECRET: "CHANGE_ME_TO_DIFFERENT_RANDOM_64_CHAR_STRING"
  
  # API keys for internal services
  INTERNAL_API_KEY: "CHANGE_ME_TO_RANDOM_API_KEY"
  ADMIN_API_KEY: "CHANGE_ME_TO_SECURE_ADMIN_KEY"
  
  # Encryption keys
  ENCRYPTION_KEY: "CHANGE_ME_TO_32_BYTE_HEX_STRING"
  
  # OAuth providers (optional)
  GITHUB_CLIENT_ID: ""
  GITHUB_CLIENT_SECRET: ""
  GOOGLE_CLIENT_ID: ""
  GOOGLE_CLIENT_SECRET: ""
---
# TLS certificate for internal communication
apiVersion: v1
kind: Secret
metadata:
  name: hal9-internal-tls
  namespace: hal9-production
  labels:
    app.kubernetes.io/name: hal9
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # These should be replaced with actual certificates
  # Generated with: openssl req -x509 -nodes -newkey rsa:4096 -keyout tls.key -out tls.crt -days 365 -subj "/CN=hal9-internal"
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBDSEFOR0VfTUUgLi4uCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLiBDSEFOR0VfTUUgLi4uCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
---
# Image pull secret for private registry
apiVersion: v1
kind: Secret
metadata:
  name: hal9-registry-credentials
  namespace: hal9-production
  labels:
    app.kubernetes.io/name: hal9
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "GITHUB_USERNAME",
          "password": "GITHUB_TOKEN",
          "auth": "BASE64_ENCODED_USERNAME:PASSWORD"
        }
      }
    }