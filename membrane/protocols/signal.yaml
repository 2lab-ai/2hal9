# Signal Protocol - Inter-Level Communication
# Version: 1.0
# Purpose: Define how signals flow between cognitive levels

protocol:
  name: Signal Protocol
  version: 1.0
  description: Manages information flow between hierarchical levels
  
upward_flow:
  description: How information moves from lower to higher levels
  
  rules:
    - name: Aggregation
      description: Multiple lower signals combine into single upper signal
      ratio: "10:1 typical compression"
      example:
        from_L1: ["error_423", "error_424", "error_425"]
        to_L2: "authentication_failures_spike"
    
    - name: Abstraction
      description: Concrete details become abstract patterns
      transformation: detail → pattern → insight
      example:
        from_L2: "10ms response time degradation"
        to_L3: "performance issue detected"
        to_L4: "system under stress"
    
    - name: Summarization
      description: Raw data becomes meaningful insights
      compression: Remove noise, preserve signal
      example:
        from_L3: "5 components showing memory leaks"
        to_L4: "architectural pattern causing resource waste"

downward_flow:
  description: How directives move from higher to lower levels
  
  rules:
    - name: Decomposition
      description: Single directive becomes multiple actions
      expansion: "1:10 typical expansion"
      example:
        from_L4: "improve system performance"
        to_L3: ["optimize database", "add caching", "tune GC"]
    
    - name: Specification
      description: Abstract goals become concrete steps
      transformation: intent → plan → action
      example:
        from_L5: "enhance user experience"
        to_L4: "reduce latency by 50%"
        to_L3: "implement connection pooling"
    
    - name: Delegation
      description: High-level intent becomes low-level execution
      distribution: Assign to appropriate subsystems
      example:
        from_L6: "cut costs by 30%"
        to_L5: "optimize infrastructure spend"
        to_L4: "consolidate services"
        to_L3: "merge redundant components"

temporal_alignment:
  description: How different time scales are reconciled
  
  conversions:
    - L1_to_L2: "1000:1 (ms to seconds)"
    - L2_to_L3: "60:1 (seconds to minutes)"
    - L3_to_L4: "60:1 (minutes to hours)"
    - L4_to_L5: "24:1 (hours to days)"
    - L5_to_L6: "7:1 (days to weeks)"
    - L6_to_L7: "4:1 (weeks to months)"
    - L7_to_L8: "12:1 (months to years)"
    - L8_to_L9: "∞:1 (years to eternal)"

validation:
  description: Ensure ±1 rule compliance
  
  checks:
    - name: Level Distance
      rule: "abs(from_level - to_level) <= 1"
      action: Reject if violation
    
    - name: Semantic Coherence
      rule: Message appropriate for target level
      action: Transform if needed
    
    - name: Temporal Compatibility
      rule: Respect natural timeframes
      action: Buffer if too fast

examples:
  valid_flows:
    - from: L2
      to: L3
      signal: "Database connection pool exhausted"
      transformed: "Resource capacity issue"
    
    - from: L5
      to: L4
      signal: "Implement microservices architecture"
      transformed: "Design service boundaries"
  
  invalid_flows:
    - from: L1
      to: L9
      signal: "CPU spike detected"
      reason: "Violates ±1 rule"
      correction: "Route through intermediate levels"
    
    - from: L9
      to: L3
      signal: "Universe is hierarchical"
      reason: "Too abstract for operational level"
      correction: "Translate through L8→L7→L6→L5→L4→L3"